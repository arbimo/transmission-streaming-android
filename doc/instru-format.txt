This file describe the instrumentation output.

This one can be activated by adding the --instrumentation option when running a transmission-daemon.

The output file is situated in the folder "instrumentation" of transmission's config directory 
(i.e. ~/.config/transmission-daemon/intrumentation for linux, /sdcard/.config/... for Android)

Implemented : 

  TR <id> CF DHT <bool> LPD <bool> P <portion> <RAND/ORD>: Session wide config parameters. <portion> is the portion of pieces chosen with a rarest first policy. <RAND/ORD> indicates which of random or order is used to choose betwen pieces of same rareness
  TR <id> FN <name> FZ <size> NP <numpieces> PL <piecelength>: The torrent file name is <name> with a size <size> and a number of pieces <numpieces> of length <piecelength>
  TR <id> S C <IP>: This peer has sent a CHOKE messsage to peer with IP <IP>
  TR <id> S UC <IP>: This peer has sent a UNCHOKE messsage to peer with IP <IP>
  TR <id> S R <IP> i <index> b <begin> l <length>: This peer has sent a REQUEST messsage to peer with IP <IP>, the index of the piece is <index>, the beginning (offset) wihtin the piece is <begin> and the requested block length is <length>
  TR <id> S CA <IP> i <index> b <begin> l <length>: This peer has sent a CANCEL         messsage to peer with IP <IP>, the index of the piece is <index>, the beginning (offset) within the piece is <begin>        and the block length is <length>
  TR <id> S H <IP> i <index>: This peer has sent a HAVE         messsage to peer with IP <IP> for the piece with index <index>
  TR <id> R PEX <IP>: Received PEX message containing the peer with IP <IP>
  TR <id> R PI <ID>: Received the piece with ID <ID>
  TR <id> R H <IP> i <index>: This peer has received a HAVE messsage from peer with IP <IP> for the piece with index <index>
  TR <id> R BF <IP> <bitfield>: This peer has received the BITFIELD <bitfield> from peer with IP <IP>
  TR <id> R P <IP> i <index> b <begin>: This peer has received a PIECE from peer with IP <IP>, the index of the piece is <index>, the beginning (offset) within the piece is <begin>


Implemented but not present in the mainline client :

  TR <id> R FEXT <IP> HAVEALL: This peer has received a HAVEALL message from the peer with IP <IP>. The HAVEALL message is part of the Fast Extension
  TR <id> R FEXT <IP> HAVENONE: This peer has received a HAVENONE message from the peer with IP <IP>. The HAVENONE message is part of the Fast Extension



Present in the instrumentation of the mainline client :

  TR <id> GS P <percent> D <downrate> U <uprate> NS <ns> NL <nl> SR <sharerate>: General statistics        on the session. The peer has completed <percent> % of the content, the aggregate download rate is <downrate> Bytes/s,        the aggregate upload rate is <uprate> Bytes/s, the number of seeds (handshake done) is <ns>,        the number of leechers (handshake done) is <nl>, and the sharing rate is <sharerate>
  TR <id> EC: Client automatically stopped (due to next_torrent_time) after x seconds
  TR <id> PRU <IP>: peer in leecher state performs a regular unchoke of the peer with IP <IP>
  TR <id> SRU <IP>: peer in seed state performs a regular unchoke of the peer with IP <IP>
  TR <id> SKU <IP>: peer in seed state keeps unchoked the peer with IP <IP>
  TR <id> POU I <IP>: peer in leecher state peforms an optimisitic unchoke of the interested peer with IP <IP>
  TR <id> POU NI <IP>: peer in leecher state peforms an optimistic unchoke of the not interested peer with IP <IP>
  TR <id> PPOU <IP>: peer in leecher state planned optimistic unchoke with IP <IP>
  TR <id> SB <IP>: The peer with IP <IP> is snubbed
  TR <id> INT LP <ins> PC <ru> C <ou> R <r>.: Choker.py internal values. <ins> is the number        of peers interested and not snubbed, <ru>+1 is the number of regular unchoke to perform,         <ou> is the number of optimistic unchoke to perform, the _round_robin method was called <r> times.
  TR <id> GSP <IP> M <state> R <round> U <uprate> UB <uptotal> D <downrate> DB <downtotal>:         General statistics for the peer with IP <IP>. The peer is a seed if <state> is S, a leecher if <state> is L        The round in _round_robin is <round> The local peer currently uploads at a rate <uprate> Bytes/s to the peer with IP <IP> and          downloads at a rate <downrate> Bytes/s from the peer with IP <IP>. The aggregated amount of bytes uploaded (resp. downloaded) is         <uptotal> (resp. <downtotal>)
  TR <id> INT i <unchokes>: Choker.py internal values. <unchokes>  is the maximum        number of unchokes to perform per 30 seconds periods
  TR <id> INT NFU <nfu> NL <nl> NK <nk> NN <nn> USL <usl> R <r>: Choker.py internal values.        <nfu> is the number of unchokes to perform on a 10 seconds interval,         <nl> is the memory for peer selection,         <nk> is the number of connections to keep, <nn> is the number of connections that will be choked,         <usl> is the number of unchokes since the last regular call to _rechoke_seed, the _round_robin method was called <r> times.
  TR <id> CONH L <IP> U <u> T <t>: Handshake performed for the connection locally initiated to peer with IP <IP>, remote peer uses PEX if <u>=1, and comes from the tracker if <t>=1
  TR <id> CONH R <IP> U <u> T <t>: Handshake performed for the connection remotely initiated from peer with IP <IP>, remote peer uses PEX if <u>=1, and comes from the tracker if <t>=1
  TR <id> CON ST <IP>: try to establish a socket connection to the peer with IP <IP>, Socket Try
  TR <id> CON SE <IP>: the socket connection to the peer with IP <IP> has failed, Socket Exception
  TR <id> CON SS <IP>: the socket connection to the peer with IP <IP> has succeeded, Socket Success
- TR <id> PEX AC <IP> <PORT>: A PEX message was received for this IP and port, but the local peer already has a connection to this machine
  TR <id> CONS B <IP> : The peer with IP <IP> is banned
  TR <id> CONS IN <m> <# of connections> : m is max_allow_in (default to 80). The connections counted in <# of connections> may not have a handshake validated yet
  TR <id> CONS INI <m> <# of connections> : m is max_initiate (default to 40). The connections counted in <# of connections> may not have a handshake validated yet
  TR <id> CON L <IP>: Connection locally initiated to peer with IP <IP>
  TR <id> CON R <IP>: Connection remotely initiated from peer with IP <IP>
  TR <id> S I <IP>: This peer has sent a INTERESTED messsage to peer with IP <IP>
  TR <id> S NI <IP>: This peer has sent a NOT_INTERESTED messsage to peer with IP <IP>
  TR <id> S BF <bitfield>: this peer has sent its bitfield message
  TR <id> S P <IP> i <index> b <begin> l <length>: This peer has sent a PIECE         messsage to peer with IP <IP>, the index of the piece is <index>, the beginning (offset) within the piece is <begin> and the        block length is <length>
  TR <id> S KA <IP>: This peer has sent a KEEP_ALIVE message to peer with IP <IP>
  TR <id> R KA <IP>: This peer has received a KEEP_ALIVE message from peer with IP <IP>
  TR <id> R CA <IP> i <index> b <begin> l <length>: This peer has received a CANCEL         messsage from peer with IP <IP>, the index of the piece is <index>, the beginning (offset) within the piece is <begin>        and the block length is <length>
  TR <id> CON C <IP> E <i> : The connection with the peer with IP <IP> was closed due to an error.        <i> in {3-15} is the error ID. Seek in Connecter.py for the meaning of this ID
  TR <id> CONH C <IP> P <p>: A completed (i.e., handshake done) connection with peer with IP <IP> was closed, the connection was preempted is <p> is set to an IP address, False otherwise
  TR <id> S PEX <IP>: Sent PEX message
  TR <id> R I <IP>: This peer has received a INTERESTED messsage from peer with IP <IP>
  TR <id> R NI <IP>: This peer has received a NOT_INTERESTED messsage from peer with IP <IP>
  TR <id> R R <IP> i <index> b <begin> l <length>: This peer has received a REQUEST         messsage from peer with IP <IP>, the index of the piece is <index>, the beginning (offset) wihtin the piece is <begin> and the         requested block length is <length>
  TR <id> CON C <IP> E <i>: The connection with the peer with IP <IP> was closed due to an error.        <i> in {1,2} is the error ID. Seek in Uploader.py for the meaning of this ID
  TR <id> R C <IP>: This peer has received a CHOKE messsage from peer with IP <IP>
  TR <id> R UC <IP>: This peer has received a UNCHOKE messsage from peer with IP <IP>
  TR <id> P <IP> S: The peer with IP <IP> is a seed when he join the peer set. That is, its initial bitfield is full. This message is not displayed when a remote peer become a seed while connected to the local peer.
  TR <id> CON C <IP> S: The connection with the peer with IP <IP> was closed, because the        local peer is a seed and the remote peer with IP <IP> is also a seed.
  TR <id> RT NL <n_leechers> NS <n_seeds>: The peer received from the tracker that         there are <n_leechers> leechers and <n_seeds> seeds in the torrent (equivallent to scrape mode)
  TR <id> RT ID <id> AI <interval>: The peer received from the tracker the tracker         ID <id> and the tracker regular request interval <interval> in seconds
  TR <id> RT NP <n_peers>: The peer received from the tracker a list containing <n_peers> peers
  TR <id> RT P <IP> <port> <peer_id>: The peer received from the tracker        the coordinate of a peer with IP <IP> port <port>  and ID <peer_id>
  TR <id> P ID <id> <ip>: The peer ID is <id> and its IP address and port numbers are <ip.port>
  TR <id> P SM: The peer has downloaded the content, it switches to seed state
  TR <id> P EG: The peer has switched to end game mode
  
